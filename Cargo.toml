[workspace]
members = [
    "crates/bg-remove-core",
    "crates/bg-remove-onnx",
    "crates/bg-remove-tract",
    "crates/bg-remove-web",
    "crates/bg-remove-cli",
    "crates/bg-remove-testing",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["IMG.LY Rust Team <rust@img.ly>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/imgly/background-removal-rust"
homepage = "https://img.ly"
keywords = ["background-removal", "image-processing", "computer-vision", "onnx", "segmentation"]
categories = ["multimedia::images", "computer-vision", "science"]
rust-version = "1.70"

[workspace.dependencies]
# Core dependencies
ort = { version = "2.0.0-rc.10", features = ["coreml"] }
image = { version = "0.25.6", features = ["png", "jpeg", "webp"] }
ndarray = "0.16"
anyhow = "1.0"
thiserror = "1.0"

# Async runtime
tokio = { version = "1.0", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CLI dependencies  
clap = { version = "4.0", features = ["derive"] }
indicatif = "0.17"
env_logger = "0.10"
log = "0.4"
chrono = { version = "0.4", features = ["serde"] }

# Development dependencies
criterion = "0.5"
tempfile = "3.0"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true


[profile.dev]
opt-level = 1
debug = true

# Workspace-level linting configuration for zero-warning policy
[workspace.lints.rust]
# Deny warnings to enforce zero-warning policy
warnings = "deny"

# Additional safety and correctness lints
unsafe_code = "warn"
unreachable_pub = "warn"
unused_qualifications = "warn"

# Documentation lints  
missing_docs = "allow"               # TODO: Add comprehensive documentation after multi-model refactoring
missing_debug_implementations = "allow"  # TODO: Add Debug implementations after multi-model refactoring

[workspace.lints.clippy]
# Pedantic lints for high code quality (lower priority so individual lints can override)
pedantic = { level = "warn", priority = -1 }

# Specific safety and correctness lints (production code only)
indexing_slicing = "warn"
unimplemented = "warn"
todo = "warn"

# Performance lints
inefficient_to_string = "warn"
large_types_passed_by_value = "warn"

# Style consistency lints
module_name_repetitions = "allow"  # Common in focused libraries
similar_names = "allow"            # Allow similar parameter names

# Allow precision loss in graphics/display math where it's expected
cast_precision_loss = "allow"      # Graphics math commonly needs this
cast_possible_truncation = "allow" # Image dimensions and coordinates
cast_sign_loss = "allow"           # Unsigned operations are common

# Allow common test patterns that are safe in test context
unwrap_used = "allow"              # Tests can panic on failure
expect_used = "allow"              # Tests can panic on failure  
panic = "allow"                    # Tests can panic on failure

# Features for model embedding (metadata only - actual features defined in crates)
[workspace.metadata.features]
default = []
# ISNet model features  
embed-isnet-fp16 = ["balanced-performance", "90mb-binary"]
embed-isnet-fp32 = ["high-accuracy", "175mb-binary"]
# BiRefNet portrait model features
embed-birefnet-fp16 = ["portrait-optimized", "467mb-binary"]
embed-birefnet-fp32 = ["portrait-optimized", "928mb-binary"]