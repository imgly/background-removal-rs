name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install FFmpeg (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev

    - name: Install FFmpeg (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install ffmpeg

    - name: Install FFmpeg (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Install pkg-config first
        choco install pkgconfiglite -y
        
        # Download pre-built FFmpeg binaries
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip" -OutFile "ffmpeg.zip"
        
        # Extract FFmpeg
        Expand-Archive -Path "ffmpeg.zip" -DestinationPath "C:\ffmpeg_temp"
        
        # Move to final location
        $ffmpegDir = Get-ChildItem -Path "C:\ffmpeg_temp" -Directory | Select-Object -First 1
        Move-Item -Path $ffmpegDir.FullName -Destination "C:\ffmpeg"
        
        # Set environment variables
        echo "C:\ffmpeg\bin" >> $env:GITHUB_PATH
        echo "FFMPEG_DIR=C:\ffmpeg" >> $env:GITHUB_ENV
        echo "PKG_CONFIG_PATH=C:\ffmpeg\lib\pkgconfig" >> $env:GITHUB_ENV
        
        # Create pkg-config directory if it doesn't exist
        New-Item -ItemType Directory -Force -Path "C:\ffmpeg\lib\pkgconfig"
        
        # Verify FFmpeg installation
        C:\ffmpeg\bin\ffmpeg.exe -version

    - name: Check
      run: cargo check --verbose

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose