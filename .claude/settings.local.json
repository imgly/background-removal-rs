{
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "true",
    "BASH_MAX_TIMEOUT_MS": "3600000",
    "BASH_DEFAULT_TIMEOUT_MS": "3600000",
    "MCP_TIMEOUT": "3600000",
    "MCP_TOOL_TIMEOUT": "3600000"
  },
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "WebFetch(domain:docs.browsermcp.io)",
      "mcp__browse__browser_navigate",
      "mcp__browse__browser_click",
      "mcp__browse__browser_type",
      "Bash(mkdir:*)",
      "WebFetch(domain:www.linkedin.com)",
      "WebFetch(domain:www.thewayofcode.com)",
      "mcp__browse__browser_press_key",
      "mcp__browse__browser_snapshot",
      "mcp__browse__browser_wait",
      "mcp__browse__browser_screenshot",
      "mcp__browse__browser_go_back",
      "Bash(git clone:*)",
      "Bash(npm install)",
      "Bash(npm start)",
      "Bash(grep:*)",
      "WebFetch(domain:img.ly)",
      "Bash(npm run dev:*)",
      "Bash(npm run serve:*)",
      "Bash(timeout 10 npm start:*)",
      "Bash(npm create:*)",
      "Bash(npm install:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(rm:*)",
      "Bash(ng version)",
      "Bash(ng new:*)",
      "Bash(timeout:*)",
      "Bash(ng build:*)",
      "Bash(chmod:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_snapshot",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npx playwright install:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(npm init:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_wait_for",
      "mcp__browser__browser_navigate",
      "WebFetch(domain:www.mux.com)",
      "Bash(./build.sh)",
      "Bash(mv:*)",
      "Bash(wasmtime:*)",
      "Bash(node test-wasmtime.js)",
      "Bash(WASMTIME_NEW_CLI=1 wasmtime run mcp-tool.wasm --invoke 'mcp:tool/exports#handle-request' -- '{\"jsonrpc\":\"2.0\",\"method\":\"resources/list\"}')",
      "Bash(wasm-tools validate:*)",
      "Bash(node:*)",
      "Bash(ffprobe:*)",
      "WebFetch(domain:github.com)",
      "Bash(npx create-next-app:*)",
      "Bash(rg:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(yarn install)",
      "Bash(yarn build:*)",
      "Bash(yarn check:type:*)",
      "Bash(find:*)",
      "Bash(yarn start)",
      "Bash(cp:*)",
      "Bash(npx jest:*)",
      "Bash(npx playwright test:*)",
      "mcp__browser__browser_click",
      "mcp__browser__browser_screenshot",
      "mcp__browser__browser_press_key",
      "mcp__browser__browser_snapshot",
      "WebFetch(domain:x.com)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:tanstack.com)",
      "Bash(./bin/repl:*)",
      "mcp__apple__notes",
      "Bash(python3:*)",
      "Bash(pnpm install:*)",
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(cargo test)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(cargo:*)",
      "Bash(time cargo run --example test_real_image)",
      "Bash(RUST_LOG=info cargo run --example test_real_image)",
      "Bash(rustc:*)",
      "Bash(./test_improvements)",
      "Bash(./final_quality_comparison)",
      "Bash(git init:*)",
      "Bash(sed:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(./test_runner.sh:*)",
      "Bash(RUST_LOG=info cargo run --package bg-remove-core --example execution_provider_test)",
      "Bash(RUST_LOG=debug cargo run --package bg-remove-core --example cpu_vs_gpu_test)",
      "Bash(RUST_LOG=info target/release/bg-remove crates/bg-remove-testing/assets/input/portraits/portrait_single_simple_bg.jpg -o test_fp16.png)",
      "Bash(./format.sh:*)",
      "Bash(./bin/format.sh:*)",
      "Bash(./bin/lint.sh:*)",
      "Bash(RUSTFLAGS=\"-A missing-docs -A missing-debug-implementations\" cargo check --package bg-remove-core)",
      "Bash(RUSTFLAGS=\"-A missing-docs -A missing-debug-implementations\" cargo check --package bg-remove-cli)",
      "Bash(./target/debug/bg-remove:*)",
      "WebFetch(domain:huggingface.co)",
      "Bash(wget:*)",
      "Bash(touch:*)",
      "Bash(md5:*)",
      "Bash(git lfs track:*)",
      "Bash(git lfs status:*)",
      "Bash(git stash push:*)",
      "Bash(git lfs migrate:*)",
      "Bash(git lfs:*)",
      "Bash(git stash:*)",
      "Bash(rustup target:*)",
      "Bash(emcc:*)",
      "WebFetch(domain:ort.pyke.io)",
      "Bash(./scripts/build-wasm.sh:*)",
      "Bash(wasm-pack build:*)",
      "Bash(EMCC_CFLAGS=\"-s SIDE_MODULE=1\" cargo build --target wasm32-unknown-emscripten --release)",
      "Bash(./emsdk:*)",
      "Bash(./scripts/build-wasm-local-emsdk.sh:*)",
      "Bash(git restore:*)",
      "Bash(./build-linux.sh:*)",
      "Bash(docker run:*)",
      "Bash(./build-cross.sh:*)",
      "Bash(RUST_BACKTRACE=1 cargo test test_image_processor_creation --lib -- --nocapture)",
      "Bash(./target/release/bg-remove-cli --input crates/bg-remove-testing/assets/input/portraits/portrait_single_simple_bg.jpg --output test_isnet_fp32_result.png --model isnet --precision fp32 --execution-provider cpu --verbose)",
      "Bash(./target/release/bg-remove --input crates/bg-remove-testing/assets/input/portraits/portrait_single_simple_bg.jpg --output test_isnet_fp32_result.png --model isnet --precision fp32 --execution-provider cpu --verbose)",
      "Bash(./target/release/bg-remove:*)",
      "Bash(git clean:*)",
      "Bash(RUSTFLAGS=\"-C target-feature=+neon\" cargo test --package bg-remove-testing --test accuracy_tests --release)",
      "Bash(CARGO_FEATURES=\"embed-isnet-fp32\" cargo test --package bg-remove-testing --test accuracy_tests --release)",
      "Bash(git worktree add:*)",
      "Bash(exiftool:*)",
      "Bash(./examples/show_icc_differences.sh:*)",
      "Bash(./test_custom_png_icc:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --doc --package bg-remove-core config::RemovalConfigBuilder::build)",
      "Bash(git worktree:*)",
      "Bash(git branch:*)",
      "Bash(git rm:*)",
      "Bash(webpmux:*)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut.jpg --format webp 2 >& 1)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut.jpg --format png 2 >& 1)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut2.jpg --format png)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut.jpg --format jpeg 2 >& 1)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut.jpg --format webp --webp-quality 100 2 >& 1)",
      "Bash(RUST_LOG=debug cargo run --bin bg-remove -- --model models/isnet uut.jpg --format webp --webp-quality 95 2 >& 1)",
      "Bash(RUST_LOG=warn cargo run --bin bg-remove -- --model models/isnet uut.jpg --format webp --webp-quality 85 2 >& 1)",
      "Bash(git merge:*)",
      "Bash(curl:*)",
      "Bash(./test_output)",
      "Bash(awk:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --package bg-remove-e2e --test accuracy_tests)",
      "Bash(docker cp:*)",
      "Bash(bash:*)",
      "Bash(./scripts/claude.sandbox.sh:*)",
      "Bash(env)",
      "Bash(claude status)",
      "WebFetch(domain:www.shuttle.dev)",
      "WebFetch(domain:tokio.rs)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(export PATH=\"$HOME/.cargo/bin:$PATH\")",
      "Bash(git config:*)",
      "Bash(./test_tracing)",
      "Bash(./test_backward_compatibility)",
      "Bash(./test_documentation)",
      "Bash(./validate_tracing_integration)",
      "Bash(./target/release/imgly-bgremove:*)",
      "Bash(git tag:*)",
      "Bash(tokei:*)",
      "Bash(./test_video_progress.sh:*)",
      "Bash(./fix_tests.sh)",
      "Bash(ln:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "browse"
  ]
}